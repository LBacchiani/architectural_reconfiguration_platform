module Monitor;

export *;

import * from Logger;
import * from Param;
import * from Reconfig_Param;
import * from Prometheus;
import * from Adaptation;




class Monitor(PrometheusInterface prom, AdaptationAlgorithm alg) {

    Int time = 0;
    ILogger logger;
    
    {
        logger = new local Logger(prom);
        logger!log(time,0,0,map[Pair("inst" + global_service_name(), foldr((Int v, Int acc) => v + acc)(base_config(),0))]); //fix me
    }

    Unit run() {
        while(time < cycles()) {
            await duration(monitoring_window() * time_unit_to_sec());
            time = time + 1;
            Rat start = timeValue(now()) - (monitoring_window() * time_unit_to_sec());
            Rat end = timeValue(now());
            Map<String,Rat> metrics = map[];
            foreach (m in global_metrics()) {
                Rat val = await prom!getV(m, global_service_name());
                metrics = put(metrics, m + global_service_name(), val);
            }
            foreach (m in service_metrics()) {
                foreach (s in services()) {
                    Rat val = await prom!getV(m, s);
                    metrics = put(metrics, m + s, val);
                }
            }
            prom!flush();
            alg!adapt(metrics,time);        
            logger!log(time,start,end,metrics);
        }
    }
}